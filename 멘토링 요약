멘토링 내용 정리

# 2차 :
 - 2차 멘토링 : 완료(15분)
      - 결측 데이터가 너무 많은데 어떻게 해야 할지 : 데이터를 직접 확인하지 못해 답을 드리기 어렵다.
      - 결측치 처리시, 시간순으로 정렬 후에 주변부분 데이터를 확인해서 5~7개씩 정해서 평균/근사하는 방식 사용 제안(snippet 구현)

# 3차 :
6.13.(월) 3차 멘토링 정리 (김도윤 코치)
  결측치에 대한 전처리 방법론 재문의
    평균, 분산을 이용하여 흐름 통합(선형보간)
    이상치화(-1, -100, -999 등)
  -  결국, 두 가지 방법 다 시도해 보고 성능이 더 잘 나오는 쪽으로 사용해야 함(정석이 없는 것 같다.)
   코드통합 관련 문의
    코치님의 경우, 머신러닝 할 때는 모듈화 하지 않았음. 딥러닝의 경우 과정자체 복잡도가 높다보니 모듈화가 필수적
    각자 보내준 파일에 대해 변수명 통합등을 진행하는 메인 컨트리뷰터가 있으면 제일 좋다.
        * 머신러닝 모듈화를 한다면, 크게
    - 전처리
    - 모델(피쳐 엔지니어링을 뜻하는 것 같다.)
    - 학습
    - 테스트, 평가
  EDA 작업의 경우 모듈화하지 않고, 노트북 형태로 뽑아내는 게 통상적임
  결론 : 노트북(.ipynb)파일의 형태로 통일하는 것을 우선적으로 진행 제시 
  이후, 모듈화는 자연스럽게 진행될 것임
  import 시 클래스, 함수 들의 개체속성에 대해 잘 모르면, 모듈화가 어려울 수도 있음
  * 모듈화 참고자료(딥러닝 용이라, 매치가 잘 되지는 않을 것임)  
  https://github.com/cs230-stanford/cs230-code-examples
